#!/bin/bash
# Start/stop the Octez Bakers and Accusers
#
### BEGIN INIT INFO
# Provides:          octez-vdf
# Required-Start:    octez-node
# Required-Stop:     
# Should-Start:      $network $named 
# Should-Stop:       $network $named 
# Default-Start:     2 3 4 5
# Default-Stop:
# Short-Description: The Octez VDF daemon
# Description:       The Octez VDF service inserts calculations into the
#		     blockchain to improve randomness.
### END INIT INFO

PATH=/bin:/usr/bin:/sbin:/usr/sbin
DESC="octez vdf"
NAME=octez-vdf
PIDDIR=/var/run/tezos
PIDFILE=$PIDDIR/octez-vdf.pid
SCRIPTNAME=/etc/init.d/"$NAME"

. /lib/lsb/init-functions

# Defaults
user=tezos
group=tezos
logdir=/var/log/tezos
rotateonstart=yes
protocols="PtLimaPt PtMumbai alpha"
waitfornode=yes
rpcport=8732

[ -r /etc/octez/node.conf ] && . /etc/octez/node.conf
[ -r /etc/octez/baker.conf ] && . /etc/octez/baker.conf

logfile_base="${logdir}/vdf_"
baker="/usr/bin/octez-baker"

initial_checks()
{
	mkdir -p ${PIDDIR}
	chown $user:$group ${PIDDIR}

	mkdir -p ${logdir}

}

wait_for_bootstrap()
{
	log_daemon_msg "Waiting for node to be bootstrapped" "octez-vdf"
		
	while [ 1 = 1 ]; do
		/usr/bin/octez-client -E http://127.0.0.1:$rpcport bootstrapped >/dev/null 2>&1
		[ "$?" = "0" ] && break
		log_daemon_msg "Node not ready - sleeping for 30 seconds" "octez-vdf"
		sleep 30

	done

}

rotate_logs ()
{
	if [ ${rotateonstart} = "yes" ]; then
		log_daemon_msg "Rotating Octez VDF logs" "octez-vdf"
		for p in ${protocols}; do
			mv -f "${logfile_base}${p}.log" "${logfile_base}${p}.log.1"
		done
	fi
}

case "$1" in
start)	initial_checks
	rotate_logs
	wait_for_bootstrap
	for p in ${protocols}; do
		[ ! -x "${baker}-$p" ] && continue
		log_daemon_msg "Starting Octez VDF for $p" "octez-vdf"

		othercliopts="othercliopts_baker_$p"
		su $user -c "${baker}-$p run vdf -K >> ${logfile_base}${p}.log 2>&1 & echo \$! > ${PIDFILE}-$p"
	done
        log_end_msg $?
	;;
stop)	log_daemon_msg "Stopping Octez VDF" "octez-vdf"
	for p in ${protocols}; do
		[ ! -x "${baker}-$p" ] && continue
        	kill  `cat ${PIDFILE}-$p`
		rm -f ${PIDFILE}-$p
	done
        ;;
restart) log_daemon_msg "Restarting Octez VDF" "octez-vdf" 
        $0 stop
        $0 start
        ;;
reload|force-reload) log_daemon_msg "No action for reload for Octez" "octez-baker"
        log_end_msg 0
        ;;
status)
	for p in ${protocols}; do
		[ ! -x "${baker}-$p" ] && continue
        	status_of_proc -p ${PIDFILE}-$p ${baker}-$p $NAME || exit $?
	done
	exit 0
        ;;
*)	log_action_msg "Usage: $0 {start|stop|status|restart|reload|force-reload}"
        exit 2
        ;;
esac
exit 0
